import { NextResponse } from "next/server";
import { db } from "@/lib/db";
import { aiDocuments } from "@/lib/schema";
import { eq } from "drizzle-orm";
import puppeteer from "puppeteer-core";
import chrome from "@sparticuz/chromium";

function generatePdfHtml(content: string): string {
  return `
    <!DOCTYPE html>
    <html lang="en">
    <head>
      <meta charset="UTF-8">
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <title>Document</title>
      <style>
        body {
          font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif;
          line-height: 1.6;
          color: #333;
          background-color: #fff;
          margin: 0;
          padding: 0;
        }
        .container {
          max-width: 800px;
          margin: 0 auto;
          padding: 40px;
        }
        h1, h2, h3, h4, h5, h6 {
          margin-top: 1.5em;
          margin-bottom: 0.5em;
          font-weight: 600;
          line-height: 1.2;
        }
        h1 { font-size: 2.25em; }
        h2 { font-size: 1.75em; }
        h3 { font-size: 1.5em; }
        p { margin-bottom: 1em; }
        ul, ol { margin-bottom: 1em; padding-left: 1.5em; }
        li { margin-bottom: 0.5em; }
        strong { font-weight: 600; }
        a { color: #0d9488; text-decoration: none; }
        a:hover { text-decoration: underline; }
        .header {
          border-bottom: 2px solid #e5e7eb;
          padding-bottom: 20px;
          margin-bottom: 40px;
          text-align: center;
        }
        .header h1 {
          font-size: 2.5em;
          color: #111827;
          margin: 0;
        }
        .footer {
          margin-top: 40px;
          padding-top: 20px;
          border-top: 1px solid #e5e7eb;
          text-align: center;
          font-size: 0.875em;
          color: #6b7280;
        }
      </style>
    </head>
    <body>
      <div class="container">
        <div class="header">
          <h1>Your AI-Generated Document</h1>
        </div>
        <div class="content">
          ${content}
        </div>
        <div class="footer">
          <p>Generated by Monzic AI</p>
        </div>
      </div>
    </body>
    </html>
  `;
}

export async function GET(
  req: Request,
  { params }: { params: { documentId: string } }
) {
  try {
    const documentId = params.documentId;

    const document = await db
      .select()
      .from(aiDocuments)
      .where(eq(aiDocuments.uuid, documentId))
      .limit(1);

    if (document.length === 0) {
      return NextResponse.json({ error: "Document not found" }, { status: 404 });
    }

    const html = generatePdfHtml(document[0].content as string);

    const browser = await puppeteer.launch({
      args: chrome.args,
      executablePath: await chrome.executablePath(),
      headless: chrome.headless,
    });
    const page = await browser.newPage();
    await page.setContent(html, { waitUntil: 'networkidle0' });
    const pdfBuffer = await page.pdf({ format: 'A4', printBackground: true });
    await browser.close();

    return new NextResponse(pdfBuffer, {
      headers: {
        "Content-Type": "application/pdf",
        "Content-Disposition": `attachment; filename="monzic-document-${documentId}.pdf"`,
      },
    });
  } catch (error) {
    console.error("Error generating PDF:", error);
    return NextResponse.json({ error: "Internal server error" }, { status: 500 });
  }
}